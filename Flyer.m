% Basic Wrapper to Contain Flyer Neural Network Control Parameters for
% Passing around in Training
classdef Flyer < handle
    properties(GetAccess = public, SetAccess = public)
        W = num2cell(zeros(1,1,3)); %   - Network Weights
        b = num2cell(zeros(1,3)); %     - Network Biases
        time = 0;   %                   - How Long this Flyer Survived   
    end
    methods
        % Initialize a Random Flyer NN, Derived from Base Parameter
        function obj = Flyer(W, b)
            if(nargin < 2)
                % Initialize a random member of the first generation.
                % Hypothesized Weighting:
                obj.W{:,:,1} = [ ...
                    1 0 0 0 0, 0 0 0 0 -1, 0 0 0 0 0, 0 0 0 0 0; ...% ~ P1
                    1 0 0 0 0, 0 0 0 0 -1, 1 0 0 0 0, 0 0 0 0 -1; ... % ~ I1
                    1 0 0 0 0, 0 0 0 0 -1, -1 0 0 0 0, 0 0 0 0 1; ... % ~ D1
                    ... 
                    0 1 0 0 0, 0 0 0 -1 0, 0 0 0 0 0, 0 0 0 0 0; ...
                    0 1 0 0 0, 0 0 0 -1 0, 0 1 0 0 0, 0 0 0 -1 0; ...
                    0 1 0 0 0, 0 0 0 -1 0, 0 -1 0 0 0, 0 0 0 1 0; ...
                    ... 
                    0 0 1 0 0, 0 0 -1 0 0, 0 0 0 0 0, 0 0 0 0 0; ...
                    0 0 1 0 0, 0 0 -1 0 0, 0 0 1 0 0, 0 0 -1 0 0; ...
                    0 0 1 0 0, 0 0 -1 0 0, 0 0 -1 0 0, 0 0 1 0 0; ...
                    ...
                    0 0 0 1 0, 0 -1 0 0 0, 0 0 0 0 0, 0 0 0 0 0; ...
                    0 0 0 1 0, 0 -1 0 0 0, 0 0 0 1 0, 0 -1 0 0 0; ...
                    0 0 0 1 0, 0 -1 0 0 0, 0 0 0 -1 0, 0 1 0 0 0; ...
                    ...
                    0 0 0 0 1, -1 0 0 0 0, 0 0 0 0 0, 0 0 0 0 0; ...
                    0 0 0 0 1, -1 0 0 0 0, 0 0 0 0 1, -1 0 0 0 0; ...
                    0 0 0 0 1, -1 0 0 0 0, 0 0 0 0 -1, 1 0 0 0 0; ...
                ];
                obj.W{:,:,1} = obj.W{:,:,1} + 10 * rand(size(obj.W{1})) - 10 * rand(size(obj.W{1})); % Randomly Deviate from Hypothesis
                obj.W{:,:,2} = 200*rand([5,15]) - 100 + 1; % Randomly initialized ~K values about 1
                obj.W{:,:,3} = 200*rand([1,5]) - 100 + 1; % Randomly initialized weightings about 1
                obj.b{:,1} = 20*rand([15,1]) - 10; % Randomly initialized biases
                obj.b{:,2} = 20*rand([5,1]) - 10;
                obj.b{:,3} = 20*rand() - 10;
            else
                obj.W = W;
                obj.b = b;
            end
        end
    end
end